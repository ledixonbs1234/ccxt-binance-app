'use client';

import React, { useState } from 'react';
import {
  Modal,
  Button,
  Steps,
  Card,
  Space,
  Typography,
  Alert,
  Tag,
  Divider,
  Row,
  Col,
  Collapse,
  List
} from 'antd';
import {
  QuestionCircleOutlined,
  PlayCircleOutlined,
  BarChartOutlined,
  CheckCircleOutlined,
  InfoCircleOutlined,
  RocketOutlined,
  BookOutlined
} from '@ant-design/icons';

const { Title, Text, Paragraph } = Typography;
const { Panel } = Collapse;

interface QuickGuideModalProps {
  visible: boolean;
  onClose: () => void;
}

export default function QuickGuideModal({ visible, onClose }: QuickGuideModalProps) {
  const [currentStep, setCurrentStep] = useState(0);

  const quickSteps = [
    {
      title: 'Ch·ªçn Symbol & Strategy',
      content: (
        <Space direction="vertical" style={{ width: '100%' }}>
          <Alert
            message="B∆∞·ªõc ƒë·∫ßu ti√™n"
            description="Ch·ªçn c·∫∑p trading (BTC/USDT, ETH/USDT) v√† strategy ph√π h·ª£p v·ªõi level c·ªßa b·∫°n"
            type="info"
            showIcon
          />
          <Card size="small">
            <Text strong>Cho ng∆∞·ªùi m·ªõi:</Text>
            <ul>
              <li>Symbol: <Text code>BTC/USDT</Text></li>
              <li>Strategy: <Tag color="green">Percentage-based</Tag></li>
              <li>Trailing %: <Text code>5%</Text></li>
            </ul>
          </Card>
        </Space>
      )
    },
    {
      title: 'T·∫°o Demo Position',
      content: (
        <Space direction="vertical" style={{ width: '100%' }}>
          <Alert
            message="Khuy·∫øn ngh·ªã"
            description="Lu√¥n b·∫Øt ƒë·∫ßu v·ªõi Demo Position ƒë·ªÉ hi·ªÉu c√°ch ho·∫°t ƒë·ªông tr∆∞·ªõc khi d√πng real money"
            type="warning"
            showIcon
          />
          <Card size="small">
            <Text strong>Demo Position:</Text>
            <ul>
              <li>‚úÖ An to√†n, kh√¥ng r·ªßi ro</li>
              <li>‚úÖ H·ªçc c√°ch s·ª≠ d·ª•ng system</li>
              <li>‚úÖ Quan s√°t real-time updates</li>
              <li>‚úÖ Hi·ªÉu alerts v√† notifications</li>
            </ul>
          </Card>
        </Space>
      )
    },
    {
      title: 'Monitor & Learn',
      content: (
        <Space direction="vertical" style={{ width: '100%' }}>
          <Alert
            message="Theo d√µi k·∫øt qu·∫£"
            description="Quan s√°t √≠t nh·∫•t 15-30 ph√∫t ƒë·ªÉ hi·ªÉu c√°ch trailing stop ho·∫°t ƒë·ªông"
            type="success"
            showIcon
          />
          <Card size="small">
            <Text strong>C·∫ßn ch√∫ √Ω:</Text>
            <ul>
              <li>üîî <Text strong>Alerts Panel</Text>: Th√¥ng b√°o real-time</li>
              <li>üìä <Text strong>Positions Panel</Text>: Tr·∫°ng th√°i position</li>
              <li>üìà <Text strong>Chart</Text>: Trailing stop visualization</li>
              <li>üí∞ <Text strong>P&L</Text>: L·ª£i nhu·∫≠n/l·ªó real-time</li>
            </ul>
          </Card>
        </Space>
      )
    }
  ];

  const strategies = [
    { name: 'Percentage', level: 'Beginner', risk: 'Low', color: 'green' },
    { name: 'ATR', level: 'Intermediate', risk: 'Medium', color: 'blue' },
    { name: 'Fibonacci', level: 'Advanced', risk: 'Medium', color: 'orange' },
    { name: 'Volume Profile', level: 'Expert', risk: 'High', color: 'red' },
    { name: 'Smart Money', level: 'Expert', risk: 'High', color: 'red' },
    { name: 'Hybrid', level: 'Expert', risk: 'High', color: 'red' }
  ];

  return (
    <Modal
      title={
        <Space>
          <QuestionCircleOutlined />
          Quick Start Guide
        </Space>
      }
      open={visible}
      onCancel={onClose}
      width={800}
      footer={[
        <Button key="guide" icon={<BookOutlined />} href="/guide" target="_blank">
          H∆∞·ªõng D·∫´n Chi Ti·∫øt
        </Button>,
        <Button key="close" onClick={onClose}>
          ƒê√≥ng
        </Button>
      ]}
    >
      <Space direction="vertical" size="large" style={{ width: '100%' }}>
        
        {/* Quick Steps */}
        <Card title="üöÄ 3 B∆∞·ªõc B·∫Øt ƒê·∫ßu Nhanh" size="small">
          <Steps
            current={currentStep}
            onChange={setCurrentStep}
            direction="vertical"
            items={quickSteps.map((step, index) => ({
              title: step.title,
              description: currentStep === index ? step.content : null
            }))}
          />
        </Card>

        {/* Strategy Quick Reference */}
        <Card title="üìä Strategies Ph·ªï Bi·∫øn" size="small">
          <Row gutter={[8, 8]}>
            {strategies.map((strategy, index) => (
              <Col xs={12} sm={8} key={index}>
                <Card size="small" style={{ textAlign: 'center' }}>
                  <Text strong>{strategy.name}</Text><br />
                  <Tag color={strategy.color} size="small">{strategy.level}</Tag><br />
                  <Text type="secondary" style={{ fontSize: 12 }}>
                    Risk: {strategy.risk}
                  </Text>
                </Card>
              </Col>
            ))}
          </Row>
        </Card>

        {/* Test Cases */}
        <Card title="üß™ Test Cases C∆° B·∫£n" size="small">
          <Collapse size="small">
            <Panel header="‚úÖ Test Case 1: Immediate Buy" key="1">
              <List
                size="small"
                dataSource={[
                  'Symbol: BTC/USDT',
                  'Strategy: Percentage (5%)',
                  'Click "Demo Position"',
                  'K·∫øt qu·∫£: Status "Active", trailing ngay l·∫≠p t·ª©c'
                ]}
                renderItem={(item, index) => (
                  <List.Item>
                    <Text>{index + 1}. {item}</Text>
                  </List.Item>
                )}
              />
            </Panel>
            
            <Panel header="‚è≥ Test Case 2: Activation Price" key="2">
              <List
                size="small"
                dataSource={[
                  'Symbol: ETH/USDT',
                  'Strategy: ATR (Period 14)',
                  'Set activation price +5% t·ª´ current',
                  'K·∫øt qu·∫£: Status "Pending", ch·ªù activation'
                ]}
                renderItem={(item, index) => (
                  <List.Item>
                    <Text>{index + 1}. {item}</Text>
                  </List.Item>
                )}
              />
            </Panel>
          </Collapse>
        </Card>

        {/* Quick Troubleshooting */}
        <Card title="üîß Troubleshooting Nhanh" size="small">
          <Space direction="vertical" style={{ width: '100%' }}>
            <Alert
              message="L·ªói th∆∞·ªùng g·∫∑p"
              description={
                <ul style={{ margin: 0, paddingLeft: 16 }}>
                  <li><Text strong>Database error</Text>: Ch·∫°y <Text code>node test-database-schema.js</Text></li>
                  <li><Text strong>API error</Text>: Ki·ªÉm tra server <Text code>http://localhost:3000</Text></li>
                  <li><Text strong>Position kh√¥ng t·∫°o ƒë∆∞·ª£c</Text>: Th·ª≠ Demo Position tr∆∞·ªõc</li>
                  <li><Text strong>Alerts kh√¥ng hi·ªán</Text>: Refresh trang (F5)</li>
                </ul>
              }
              type="warning"
              showIcon
            />
          </Space>
        </Card>

        {/* Links */}
        <Card title="üîó Links H·ªØu √çch" size="small">
          <Row gutter={[16, 8]}>
            <Col xs={24} sm={12}>
              <Button 
                block 
                icon={<RocketOutlined />}
                href="/advanced-trailing-stop"
                target="_blank"
              >
                Advanced Demo
              </Button>
            </Col>
            <Col xs={24} sm={12}>
              <Button 
                block 
                icon={<BarChartOutlined />}
                href="/enhanced-trailing-stop"
                target="_blank"
              >
                Enhanced Demo
              </Button>
            </Col>
            <Col xs={24} sm={12}>
              <Button 
                block 
                icon={<BookOutlined />}
                href="/guide"
                target="_blank"
              >
                H∆∞·ªõng D·∫´n Chi Ti·∫øt
              </Button>
            </Col>
            <Col xs={24} sm={12}>
              <Button 
                block 
                icon={<InfoCircleOutlined />}
                href="/"
                target="_blank"
              >
                Trang Ch√≠nh
              </Button>
            </Col>
          </Row>
        </Card>

      </Space>
    </Modal>
  );
}
